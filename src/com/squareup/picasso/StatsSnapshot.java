/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.squareup.picasso;

import java.io.PrintWriter;
import java.io.StringWriter;

import android.util.Log;

public class StatsSnapshot {
    public final long averageDownloadSize;
    public final long averageOriginalBitmapSize;
    public final long averageTransformedBitmapSize;
    public final long cacheHits;
    public final long cacheMisses;
    public final int downloadCount;
    public final int maxSize;
    public final int originalBitmapCount;
    public final int size;
    public final long timeStamp;
    public final long totalDownloadSize;
    public final long totalOriginalBitmapSize;
    public final long totalTransformedBitmapSize;
    public final int transformedBitmapCount;
    
    public StatsSnapshot(int p1, int p2, long p3, long p4, long p5, long p6, long p7, long p8, long p9, long p10, int p11, int p12, int p13, long p14) {
        // :( Parsing error. Please contact me.
    }
    
    public void dump() {
        StringWriter localString1 = new StringWriter();
        dump(new PrintWriter(localString1));
        Log.i("Picasso", localString1.toString());
    }
    
    public void dump(PrintWriter p1) {
        p1.println("===============BEGIN PICASSO STATS ===============");
        p1.println("Memory Cache Stats");
        p1.print("  Max Cache Size: ");
        p1.println(maxSize);
        p1.print("  Cache Size: ");
        p1.println(size);
        p1.print("  Cache % Full: ");
        p1.println((int)Math.ceil((double)(((float)size / (float)maxSize) * 100.0f)));
        p1.print("  Cache Hits: ");
        p1.println(cacheHits);
        p1.print("  Cache Misses: ");
        p1.println(cacheMisses);
        p1.println("Network Stats");
        p1.print("  Download Count: ");
        p1.println(downloadCount);
        p1.print("  Total Download Size: ");
        p1.println(totalDownloadSize);
        p1.print("  Average Download Size: ");
        p1.println(averageDownloadSize);
        p1.println("Bitmap Stats");
        p1.print("  Total Bitmaps Decoded: ");
        p1.println(originalBitmapCount);
        p1.print("  Total Bitmap Size: ");
        p1.println(totalOriginalBitmapSize);
        p1.print("  Total Transformed Bitmaps: ");
        p1.println(transformedBitmapCount);
        p1.print("  Total Transformed Bitmap Size: ");
        p1.println(totalTransformedBitmapSize);
        p1.print("  Average Bitmap Size: ");
        p1.println(averageOriginalBitmapSize);
        p1.print("  Average Transformed Bitmap Size: ");
        p1.println(averageTransformedBitmapSize);
        p1.println("===============END PICASSO STATS ===============");
        p1.flush();
    }
    
    public String toString() {
        return "StatsSnapshot{maxSize=" + maxSize + ", size=" + size + ", cacheHits=" + cacheHits + ", cacheMisses=" + cacheMisses + ", downloadCount=" + downloadCount + ", totalDownloadSize=" + totalDownloadSize + ", averageDownloadSize=" + averageDownloadSize + ", totalOriginalBitmapSize=" + totalOriginalBitmapSize + ", totalTransformedBitmapSize=" + totalTransformedBitmapSize + ", averageOriginalBitmapSize=" + averageOriginalBitmapSize + ", averageTransformedBitmapSize=" + averageTransformedBitmapSize + ", originalBitmapCount=" + originalBitmapCount + ", transformedBitmapCount=" + transformedBitmapCount + ", timeStamp=" + timeStamp + '}';
    }
}
