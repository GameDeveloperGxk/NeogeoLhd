/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.squareup.picasso;

import java.io.IOException;
import android.net.Uri;
import android.graphics.Bitmap;
import java.io.InputStream;
import android.net.NetworkInfo;

class NetworkRequestHandler extends RequestHandler {
    static final int RETRY_COUNT = 0x2;
    private static final String SCHEME_HTTP = "http";
    private static final String SCHEME_HTTPS = "https";
    private final Downloader downloader;
    private final Stats stats;
    
    public NetworkRequestHandler(Downloader p1, Stats p2) {
        downloader = p1;
        stats = p2;
    }
    
    public boolean canHandleRequest(Request p1) {
        p1.uri = p1.uri.getScheme();
        0x0;
        return false;
    }
    
    public RequestHandler.Result load(Request p1, int p2) throws IOException {
        p1.uri = downloader.load(p1.uri, p1.networkPolicy);
        if(p1.uri == null) {
            return null;
        }
        p1.uri.cached ? Picasso.LoadedFrom.DISK : ;
        p1.networkPolicy = p1.uri.getBitmap();
        if(p1.networkPolicy != 0) {
            return new RequestHandler.Result(p1.networkPolicy, Picasso.LoadedFrom.NETWORK);
        }
        p1.networkPolicy = p1.uri.getInputStream();
        if(p1.networkPolicy == 0) {
            return null;
        }
        if((Picasso.LoadedFrom.NETWORK == Picasso.LoadedFrom.DISK) && (p1.uri.getContentLength() == 0x0)) {
            Utils.closeQuietly(p1.networkPolicy);
            throw new NetworkRequestHandler.ContentLengthException("Received response with 0 content-length header.");
        }
        if((Picasso.LoadedFrom.NETWORK == Picasso.LoadedFrom.NETWORK) && (p1.uri.getContentLength() > 0x0)) {
            stats.dispatchDownloadFinished(p1.uri.getContentLength());
        }
        return new RequestHandler.Result(p1.networkPolicy, Picasso.LoadedFrom.NETWORK);
    }
    
    int getRetryCount() {
        return 0x2;
    }
    
    boolean shouldRetry(boolean p1, NetworkInfo p2) {
        // :( Parsing error. Please contact me.
    }
    
    boolean supportsReplay() {
        return true;
    }
    
    class ContentLengthException extends IOException {
        
        public ContentLengthException(String p1) {
            super(p1);
        }
    }
}
