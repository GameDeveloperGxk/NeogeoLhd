/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.squareup.picasso;

import java.util.concurrent.FutureTask;
import java.util.concurrent.ThreadPoolExecutor;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.PriorityBlockingQueue;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.ThreadFactory;
import android.net.NetworkInfo;
import java.util.concurrent.Future;

class PicassoExecutorService extends ThreadPoolExecutor {
    private static final int DEFAULT_THREAD_COUNT = 0x3;
    
    PicassoExecutorService() {
        super(0x3, 0x3, 0x0, TimeUnit.MILLISECONDS, new PriorityBlockingQueue(), new Utils.PicassoThreadFactory());
    }
    
    void adjustThreadCount(NetworkInfo p1) {
        // :( Parsing error. Please contact me.
    }
    
    private void setThreadCount(int p1) {
        setCorePoolSize(p1);
        setMaximumPoolSize(p1);
    }
    
    public Future<?> submit(Runnable p1) {
        PicassoExecutorService.PicassoFutureTask localPicassoExecutorService.PicassoFutureTask1 = new PicassoExecutorService.PicassoFutureTask(p1);
        execute(localPicassoExecutorService.PicassoFutureTask1);
        return localPicassoExecutorService.PicassoFutureTask1;
    }
}
