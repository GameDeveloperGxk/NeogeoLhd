/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.squareup.picasso;

import android.graphics.Bitmap;
import java.io.InputStream;
import android.graphics.BitmapFactory;
import java.io.IOException;
import android.net.NetworkInfo;

public abstract class RequestHandler {
    
    public abstract boolean canHandleRequest(Request p1);
    
    
    public RequestHandler() {
    }
    
    int getRetryCount() {
        return 0x0;
    }
    
    boolean shouldRetry(boolean p1, NetworkInfo p2) {
        return false;
    }
    
    boolean supportsReplay() {
        return false;
    }
    
    static BitmapFactory.Options createBitmapOptions(Request p1) {
        // :( Parsing error. Please contact me.
    }
    
    static boolean requiresInSampleSize(BitmapFactory.Options p1) {
        return ((p1 != null) && (inJustDecodeBounds));
    }
    
    static void calculateInSampleSize(int p1, int p2, BitmapFactory.Options p3, Request p4) {
        calculateInSampleSize(p1, p2, p3.outWidth, p3.outHeight, p3, p4);
    }
    
    static void calculateInSampleSize(int p1, int p2, int p3, int p4, BitmapFactory.Options p5, Request p6) {
        int localconst/41 = 0x1;
        if((p4 > p2) || (p3 > p1)) {
            if(p2 == 0) {
                Math.floor((double)((float)p3 / (float)p1)) = (int)Math.floor((double)((float)p3 / (float)p1));
            } else if(p1 == 0) {
                Math.floor((double)((float)p4 / (float)p2)) = (int)Math.floor((double)((float)p4 / (float)p2));
            } else {
                Math.floor((double)((float)p4 / (float)p2)) = (int)Math.floor((double)((float)p4 / (float)p2));
                ((float)p3 / (float)p1) = (int)Math.floor((double)((float)p3 / (float)p1));
                if(p6.centerInside) {
                    localint2 = Math.max(localint2, localint3);
                } else {
                    localconst/41 = Math.min(localconst/41, localint4);
                }
            }
        }
        p5.inSampleSize = localconst/41;
        p5.inJustDecodeBounds = false;
    }
}
