/**
  * Generated by smali2java 1.0.0.558
  * Copyright (C) 2013 Hensence.com
  */

package com.fbagamehjdt;

import android.support.v4.view.ViewPager;
import android.widget.ImageView;
import android.app.Dialog;
import android.view.View;
import android.support.v4.view.PagerAdapter;
import android.content.Context;
import android.widget.TextView;
import android.widget.Button;
import android.view.LayoutInflater;
import android.widget.LinearLayout;
import android.view.ViewGroup;
import java.util.ArrayList;
import java.util.Timer;
import android.widget.RelativeLayout;
import com.fbagamehjdt.api.Util;
import com.fbagamehjdt.api.ResUtil;
import android.view.KeyEvent;
import android.widget.Toast;
import android.os.Bundle;
import android.view.Window;

public class ConFrimDialog extends Dialog implements View.OnClickListener {
    public ConFrimDialog.ConfirmDialogListener a;
    private Context c;
    private TextView d;
    private Button e;
    private Button f;
    private View g;
    private LayoutInflater h;
    private ViewPager i;
    private ImageView j;
    private ImageView k;
    private TitleTextView l;
    private LinearLayout m;
    private ImageView n;
    private ImageView[] o;
    private ViewGroup p;
    private ArrayList<View> q;
    private Timer r;
    
    public ConFrimDialog(Context p1, ConFrimDialog.ConfirmDialogListener p2) {
        super(p1, 0x7f090160);
        h = LayoutInflater.from(p1);
        a = p2;
        c = p1;
        setCanceledOnTouchOutside(true);
        setCancelable(false);
        b();
    }
    
    protected void onCreate(Bundle p1) {
        getWindow().setLayout(Util.a(0x640), Util.a(0x384));
        super.onCreate(p1);
    }
    
    private void a() {
        g = h.inflate(0x7f04001c, 0x0);
        d = (TextView)g.findViewById(0x7f0c0035);
        e = (Button)g.findViewById(0x7f0c005f);
        f = (Button)g.findViewById(0x7f0c005e);
        e.setOnClickListener(this);
        f.setOnClickListener(this);
        e.setNextFocusLeftId(f.getId());
        f.setNextFocusRightId(e.getId());
        setContentView(g);
    }
    
    private void b() {
        RelativeLayout localRelativeLayout1 = new RelativeLayout(c);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x1, -0x1);
        localRelativeLayout1.setLayoutParams(i);
        i = new ViewPager(c);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x1, -0x1);
        localRelativeLayout1.addView(i, i);
        m = new LinearLayout(c);
        m.setOrientation(0x0);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x2, -0x2);
        i.bottomMargin = Util.a(0x1e);
        i.addRule(0xc);
        i.addRule(0xe);
        localRelativeLayout1.addView(m, i);
        l = new TitleTextView(c);
        l.setText("\u70b9\u51fb\u786e\u5b9a(OK)\u952e\u8fd4\u56de\u6e38\u620f");
        l.setTextSize(0x0, (float)Util.a(0x19));
        l.setTextColor(0xff000000);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x2, -0x2);
        i.addRule(0xc);
        i.addRule(0xe);
        i.bottomMargin = Util.a(0x32);
        localRelativeLayout1.addView(l, i);
        j = new ImageView(c);
        j.setScaleType(ImageView.ScaleType.FIT_XY);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x1, -0x1);
        i.addRule(0xc);
        i.addRule(0xe);
        j.setBackgroundResource(ResUtil.b(c, "kof_sb"));
        k = new ImageView(c);
        k.setScaleType(ImageView.ScaleType.FIT_XY);
        RelativeLayout.LayoutParams i = new RelativeLayout.LayoutParams(-0x1, -0x1);
        i.addRule(0xc);
        i.addRule(0xe);
        k.setBackgroundResource(ResUtil.b(c, "kof_yk"));
        q = new ArrayList();
        q.add(k);
        q.add(j);
        new ImageView[0x2] = 0x0;
        for(; new ImageView[0x2] < 0x2; new ImageView[0x2] = new ImageView[0x2] + 0x1) {
            n = new ImageView(c);
            n.setLayoutParams(new RelativeLayout.LayoutParams(Util.a(0x14), Util.a(0x14)));
            n.setPadding(Util.a(0x14), 0x0, Util.a(0x14), 0x0);
            o[new ImageView[0x2]] = n;
            if(new ImageView[0x2] == null) {
                o[new ImageView[0x2]].setBackgroundResource(0x7f02006c);
            } else {
                o[new ImageView[0x2]].setBackgroundResource(0x7f02006d);
            }
            m.addView(o[new ImageView[0x2]]);
        }
        i.setAdapter(b);
        i.setOnPageChangeListener(new ConFrimDialog.GuidePageChangeListener(this));
        setContentView(localRelativeLayout1);
    }
    PagerAdapter b = new PagerAdapter(this) {
        
        1(ConFrimDialog p1) {
        }
        
        public int getCount() {
            return 0x2;
        }
        
        public boolean isViewFromObject(View p1, Object p2) {
            return (p1 == p2);
        }
        
        public void destroyItem(View p1, int p2, Object p3) {
            p1.removeView((View)a(a).get(p2));
        }
        
        public Object instantiateItem(View p1, int p2) {
            p1.addView((View)a(a).get(p2));
            return a(a).get(p2);
        }
    };
    
    class GuidePageChangeListener implements ViewPager.OnPageChangeListener {
        
        GuidePageChangeListener(ConFrimDialog p1) {
        }
        
        public void onPageScrollStateChanged(int p1) {
        }
        
        public void onPageScrolled(int p1, float p2, int p3) {
        }
        
        public void onPageSelected(int p1) {
            for(const/4  = 0x0; 0x0 < b(a).length; 0x0 = 0x0 + 0x1) {
                b(a)[p1].setBackgroundResource(0x7f02006c);
                if(p1 != 0x0) {
                    b(a)[0x0].setBackgroundResource(0x7f02006d);
                }
            }
        }
    }
    
    public void onClick(View p1) {
        if(p1 == e) {
            if(a != null) {
                a.onConfirm();
            }
        } else if(p1 == f) {
            if(a != null) {
                a.onCancel();
            }
        }
        dismiss();
    }
    private long s = 0x0;
    
    public boolean dispatchKeyEvent(KeyEvent p1) {
        if(p1.getAction() == 0) {
            if(p1.getKeyCode() != 0x4) {
                if((p1.getKeyCode() == 0x7) || (p1.getKeyCode() == 0x6f)) {
                }
            }
            if((System.currentTimeMillis() - s) > 0x7d0) {
                Toast.makeText(c, "\u518d\u6309\u4e00\u6b21\u9000\u51fa\u6e38\u620f", 0x0).show();
                s = System.currentTimeMillis();
            } else if(a != null) {
                a.onConfirm();
                dismiss();
                if((p1.getKeyCode() != 0x16) && (p1.getKeyCode() != 0x15)) {
                    if(a != null) {
                        a.onCancel();
                        dismiss();
                    }
                }
            }
        }
        return super.dispatchKeyEvent(p1);
    }
}
